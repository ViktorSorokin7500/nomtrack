"use client";

import { useState, useTransition } from "react";
import { Modal } from "../ui";
import { deleteRecipe } from "@/app/actions";
import toast from "react-hot-toast";

// –û–ø–∏—Å—É—î–º–æ —Ç–∏–ø –Ω–∞—à–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞, —â–æ–± TypeScript –Ω–∞–º –¥–æ–ø–æ–º–∞–≥–∞–≤
type Recipe = {
  id: string;
  recipe_name: string;
  calories_per_100g: number;
  protein_per_100g: number;
  fat_per_100g: number;
  carbs_per_100g: number;
  ingredients_text: string;
  total_weight_g: number;
};

interface RecipeListProps {
  recipes: Recipe[];
}

export function RecipeList({ recipes }: RecipeListProps) {
  // –°—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –í–ò–ë–†–ê–ù–û–ì–û —Ä–µ—Ü–µ–ø—Ç–∞. –Ø–∫—â–æ null - –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑–∞–∫—Ä–∏—Ç–µ.
  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);

  const [isPending, startTransition] = useTransition();

  const handleDeleteConfirmation = (recipeId: string) => {
    toast(
      (t) => (
        <div className="flex flex-col items-center gap-4">
          <p className="font-semibold">
            –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ä–µ—Ü–µ–ø—Ç?
          </p>
          <div className="flex gap-3">
            <button
              onClick={() => {
                startTransition(() => {
                  // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä–Ω—É –¥—ñ—é –ø—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ
                  deleteRecipe(recipeId).then((res) => {
                    if (res.error) {
                      toast.error(res.error); // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ —î
                    } else {
                      toast.success(res.success || "–†–µ—Ü–µ–ø—Ç –≤–∏–¥–∞–ª–µ–Ω–æ!"); // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                    }
                  });
                });
                toast.dismiss(t.id); // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
              }}
              className="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700"
            >
              –¢–∞–∫, –≤–∏–¥–∞–ª–∏—Ç–∏
            </button>
            <button
              onClick={() => toast.dismiss(t.id)} // –ü—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
              className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
            >
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </button>
          </div>
        </div>
      ),
      {
        duration: 6000, // –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –±—É–¥–µ –≤–∏—Å—ñ—Ç–∏ 6 —Å–µ–∫—É–Ω–¥, —è–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏—Ç–∏
      }
    );
  };

  return (
    <>
      <div className="space-y-4 max-h-96 overflow-y-auto pr-2">
        {recipes && recipes.length > 0 ? (
          recipes.map((recipe) => (
            // –¢–µ–ø–µ—Ä —Ü–µ–π div - –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –±–µ–∑ onClick
            <div
              key={recipe.id}
              className="p-4 border rounded-lg bg-white shadow-sm flex justify-between items-center"
            >
              {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–µ—Ü–µ–ø—Ç */}
              <div className="flex-grow">
                <h3 className="font-bold">{recipe.recipe_name}</h3>
                <p className="text-sm text-gray-500">
                  –ù–∞ 100–≥: {recipe.calories_per_100g} –∫–∫–∞–ª, –ë:{" "}
                  {recipe.protein_per_100g}–≥, –ñ: {recipe.fat_per_100g}–≥, –í:{" "}
                  {recipe.carbs_per_100g}–≥
                </p>
              </div>

              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥—ñ–π */}
              <div className="flex items-center ml-4">
                {/* –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏" –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ */}
                <button
                  onClick={() => setSelectedRecipe(recipe)}
                  className="p-2 text-gray-400 hover:text-blue-600 rounded-full hover:bg-blue-50 transition-colors"
                  aria-label="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç–∞"
                >
                  üìñ
                </button>

                {/* –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è */}
                <button
                  onClick={() => handleDeleteConfirmation(recipe.id)}
                  disabled={isPending}
                  className="p-2 text-gray-400 hover:text-red-600 rounded-full hover:bg-red-50 disabled:opacity-50 transition-colors"
                  aria-label="–í–∏–¥–∞–ª–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç"
                >
                  üóëÔ∏è
                </button>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-500 py-10">
            –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤.
          </p>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, —è–∫–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ä–µ—Ü–µ–ø—Ç –≤–∏–±—Ä–∞–Ω–æ */}
      <Modal isOpen={!!selectedRecipe} onClose={() => setSelectedRecipe(null)}>
        {selectedRecipe && (
          <div className="space-y-4">
            <h2 className="text-2xl font-bold">{selectedRecipe.recipe_name}</h2>

            <div>
              <h4 className="font-semibold">–ü–æ–∂–∏–≤–Ω–∞ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å (–Ω–∞ 100–≥):</h4>
              <p className="text-gray-700">
                {selectedRecipe.calories_per_100g} –∫–∫–∞–ª | –ë:{" "}
                {selectedRecipe.protein_per_100g}–≥ | –ñ:{" "}
                {selectedRecipe.fat_per_100g}–≥ | –í:{" "}
                {selectedRecipe.carbs_per_100g}–≥
              </p>
            </div>

            <p className="text-sm text-gray-600">
              –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞–≥–∞ —Å—Ç—Ä–∞–≤–∏:{" "}
              <strong>{selectedRecipe.total_weight_g} –≥</strong>
            </p>

            <div>
              <h4 className="font-semibold">–°–∫–ª–∞–¥:</h4>
              <pre className="p-3 bg-gray-100 rounded-md whitespace-pre-wrap text-sm font-sans">
                {selectedRecipe.ingredients_text}
              </pre>
            </div>
          </div>
        )}
      </Modal>
    </>
  );
}
